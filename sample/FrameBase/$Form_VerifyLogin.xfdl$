<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_VerifyLogin" width="1280" height="720" titletext="New Form">
    <Layouts>
      <Layout height="720" width="1280">
        <Static id="Static00" taborder="0" text="이메일 인증 페이지" left="10" top="10" width="400" height="30" onclick="Static00_onclick" textAlign="left" font="bold 26px/normal &quot;Gulim&quot;" background="blue" color="white"/>
        <Button id="btn_sendEmail" taborder="1" text="이메일 인증 보내기" left="132" top="74" width="260" height="106" onclick="btn_sendEmail_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[this.btn_sendEmail_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{		console.log(nexacro.getApplication().ds_userInfo.saveXML());
	var email = application.gds_userInfo.getColumn(0, "email");
	console.log("전역 데이터셋에서 가져온 이메일: " + email);
	var email=this.ds_userInfo.getColum(0,"email");
	
	if(!email){
		alert("이메일 정보가 없습니다.");
		return;
	}
		
	this.fnSendVerificationEmail(email);
};

// 이메일 인증 보내기 함수
this.fnSendVerificationEmail = function(email) {
    var strSvcId = "sendEmailVerification";
    var strSvcUrl = "svc::sendEmailVerification.do";
    var inData = "ds_userInfo=ds_userInfo";  // 이메일을 담고 있는 Dataset 전달
    var outData = "";
    var strArg = "email=" + email;  // 서버로 전달할 이메일 정보
    var callBackFnc = "fnEmailCallback";  // 콜백 함수
    var isAsync = true;

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};

// 트랜잭션 콜백 함수
this.fnEmailCallback = function(strSvcId, nErrorCode, strErrorMsg) {

    if (nErrorCode < 0) {
        alert("이메일 발송 실패: " + strErrorMsg);
    } else {
        alert("이메일 발송 성공! 인증 메일을 확인하세요.");
    }
};
]]></Script>
    <Objects/>
  </Form>
</FDL>
