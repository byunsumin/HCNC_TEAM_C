<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_employee" width="1280" height="720" titletext="직원 관리" onload="Form_employee_onload">
    <Objects>
      <Dataset id="ds_empList">
        <ColumnInfo>
          <Column id="emp_code" type="STRING" size="256"/>
          <Column id="dep_name" type="STRING" size="256"/>
          <Column id="assign_name" type="STRING" size="256"/>
          <Column id="name" type="STRING" size="256"/>
          <Column id="gender" type="STRING" size="256"/>
          <Column id="phone" type="STRING" size="256"/>
          <Column id="birth" type="STRING" size="256"/>
          <Column id="address" type="STRING" size="256"/>
          <Column id="email" type="STRING" size="256"/>
          <Column id="account" type="STRING" size="256"/>
          <Column id="id" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <!-- 자식 창으로 전달할 데이터셋 (입력용) -->
      <Dataset id="ds_employee">
        <ColumnInfo>
          <Column id="id" type="STRING" size="256"/>
          <Column id="password" type="STRING" size="256"/>
          <Column id="name" type="STRING" size="256"/>
          <Column id="birth" type="STRING" size="256"/>
          <Column id="gender" type="STRING" size="256"/>
          <Column id="phone" type="STRING" size="256"/>
          <Column id="address" type="STRING" size="256"/>
          <Column id="email" type="STRING" size="256"/>
          <Column id="joinDate" type="STRING" size="256"/>
          <Column id="account" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_search">
        <ColumnInfo>
          <Column id="SEARCH_TYPE" type="STRING" size="256"/>
          <Column id="SEARCH_WORD" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_SearchType">
        <ColumnInfo>
          <Column id="Value" type="STRING" size="256"/>
          <Column id="Name" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="Name">전체</Col>
            <Col id="Value">ALL</Col>
          </Row>
          <Row>
            <Col id="Name">이름</Col>
            <Col id="Value">NAME</Col>
          </Row>
          <Row>
            <Col id="Name">부서</Col>
            <Col id="Value">DEP</Col>
          </Row>
          <Row>
            <Col id="Name">직책</Col>
            <Col id="Value">ASSIGN</Col>
          </Row>
        </Rows>
      </Dataset>
    </Objects>
    <Layouts>
      <Layout height="720" width="1280">
        <Static id="Title" taborder="0" text="직원 정보 관리" left="15" top="15" width="350" height="50" font="32px/normal &quot;Gulim&quot;"/>
        <Combo id="cmb_SearchType" taborder="1" text="전체" left="20" top="110" width="100" height="30" innerdataset="ds_SearchType" codecolumn="Value" datacolumn="Name" index="0" value="ALL"/>
        <Edit id="edt_SearchWord" taborder="2" left="130" top="110" width="180" height="30" binddataset="ds_search" text="bind:SEARCH_WORD" onchanged="edt_SearchWord_onchanged"/>
        <Button id="btn_Search" taborder="3" text="조회" left="320" top="110" width="70" height="30" onclick="btn_Search_onclick"/>
        <Grid id="grd_employee" taborder="4" left="15" top="160" width="785" height="330" binddataset="ds_empList">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="55"/>
                <Column size="75"/>
                <Column size="60"/>
                <Column size="70"/>
                <Column size="41"/>
                <Column size="91"/>
                <Column size="145"/>
                <Column size="84"/>
                <Column size="156"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell text="사번"/>
                <Cell col="1" text="부서명"/>
                <Cell col="2" text="직책"/>
                <Cell col="3" text="이름"/>
                <Cell col="4" text="성별"/>
                <Cell col="5" text="전화번호"/>
                <Cell col="6" text="생년월일"/>
                <Cell col="7" text="주소"/>
                <Cell col="8" text="이메일"/>
              </Band>
              <Band id="body">
                <Cell text="bind:empCode"/>
                <Cell col="1" text="bind:depName"/>
                <Cell col="2" text="bind:assignName"/>
                <Cell col="3" text="bind:name"/>
                <Cell col="4" text="bind:gender"/>
                <Cell col="5" text="bind:phone"/>
                <Cell col="6" text="bind:birth" displaytype="date" calendardateformat="yyyy년 MM일 dd월"/>
                <Cell col="7" text="bind:address"/>
                <Cell col="8" text="bind:email"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <Button id="btn_Register" taborder="5" text="등록" left="15" top="500" width="80" height="50" onclick="btn_Register_onclick"/>
        <Button id="btn_Edit" taborder="6" text="수정" left="110" top="500" width="80" height="50" onclick="btn_Edit_onclick"/>
        <Button id="btn_Delete" taborder="7" text="삭제" left="200" top="500" width="80" height="50" onclick="btn_Delete_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[// 검색 버튼 클릭 이벤트
this.btn_Search_onclick = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {
    console.log("검색 버튼 클릭됨");
    this.fnSearch();  // 검색 함수 호출
};

// 폼 로드 이벤트
this.Form_employee_onload = function(obj:nexacro.Form, e:nexacro.LoadEventInfo) {
    console.log("폼 로드됨. 초기 검색 유형 설정: ALL");
    this.ds_search.setColumn(0, "SEARCH_TYPE", "ALL");  // 검색 유형을 ALL로 설정

    this.fnSearch();  // 폼 로드 시 자동 검색
};

// 검색 함수
this.fnSearch = function() {
    var strSvcId    = "selectEmployeeList";  // 서비스 ID
    var strSvcUrl   = "svc::selectEmployeeList.do";  // 서비스 URL
    var inData      = "ds_search=ds_search";  // 입력 데이터셋
    var outData     = "ds_empList=ds_empList";  // 출력 데이터셋
    var callBackFnc = "fnCallback";  // 콜백 함수
    var isAsync     = true;  // 비동기 처리

    // 트랜잭션 호출 로그
    console.log("트랜잭션 시작. 서비스 ID: " + strSvcId + ", URL: " + strSvcUrl);
    console.log("입력 데이터셋: " + inData);
    console.log("출력 데이터셋: " + outData);
    console.log(this.ds_search.saveXML());

    // 트랜잭션 호출
    this.transaction(strSvcId, strSvcUrl, inData, outData, callBackFnc, isAsync);
};

// 등록 버튼 클릭 이벤트
this.btn_Register_onclick = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {
    console.log("등록 팝업 호출");
    this.showRegisterPopup();  // 등록 팝업 호출 함수 호출
};

// 수정 버튼 클릭 이벤트
this.btn_Edit_onclick = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {   

	
    var objParam =
        {
		id: this.ds_empList.getColumn(this.ds_empList.rowposition, "id"),
        name: this.ds_empList.getColumn(this.ds_empList.rowposition, "name"),
        password: this.ds_empList.getColumn(this.ds_empList.rowposition, "password"),
        birth: this.ds_empList.getColumn(this.ds_empList.rowposition, "birth"),
        gender: this.ds_empList.getColumn(this.ds_empList.rowposition, "gender"),
        phone: this.ds_empList.getColumn(this.ds_empList.rowposition, "phone"),
        email: this.ds_empList.getColumn(this.ds_empList.rowposition, "email"),
        address: this.ds_empList.getColumn(this.ds_empList.rowposition, "address"),
        account: this.ds_empList.getColumn(this.ds_empList.rowposition, "account")
		
		};
    

    this.showEditPopup(objParam);
};

// 삭제 버튼 클릭 이벤트
this.btn_Delete_onclick = function(obj:nexacro.Button, e:nexacro.ClickEventInfo) {


    if (selectedRow < 0) {
        this.alert("삭제할 직원을 선택하세요.");
        return;
    }

    var employeeId = this.ds_empList.getColumn(selectedRow, "id");

    // 삭제 확인 메시지
    if (this.confirm("선택한 직원을 삭제하시겠습니까?")) {
        // 삭제 트랜잭션 호출
        this.fnDelete(employeeId);
		}
   
};

// 등록 팝업 호출 함수
this.showRegisterPopup = function() {
    console.log("등록 팝업 열기");

    var popup = new nexacro.ChildFrame;
    popup.init("popupRegisterEmp", 100, 100, 800, 700, null, null, "FrameBase::Popup_RegisterEmp.xfdl");
    popup.set_dragmovetype("all");
    popup.set_layered(true);
    popup.set_autosize(true);
    popup.set_showtitlebar(true);
    popup.set_showstatusbar(false);
    popup.set_resizable(true);
    popup.set_openalign("center middle");

    // 팝업 호출
    popup.showModal(this.getOwnerFrame(), null, this, "fn_popupCallback", true);

};

// 수정 팝업 호출 함수
this.showEditPopup = function(objParam) {
    console.log("수정 팝업 열기");

    var popup = new nexacro.ChildFrame;
    popup.init("popupEditEmp", 100, 100, 800, 700, null, null, "FrameBase::Popup_EditEmp.xfdl");
    popup.set_dragmovetype("all");
    popup.set_layered(true);
    popup.set_autosize(true);
    popup.set_showtitlebar(true);
    popup.set_showstatusbar(false);
    popup.set_resizable(true);
    popup.set_openalign("center middle");

    // 팝업 호출
    popup.showModal(this.getOwnerFrame(), objParam, this, "fn_popupCallback", true);
	
};

// 삭제 함수
this.fnDelete = function(employeeId) {
    var strSvcId    = "deleteEmployee";  // 서비스 ID
    var strSvcUrl   = "svc::deleteEmployee.do";  // 서비스 URL
    var inData      = "";  // 입력 데이터셋 없음
    var outData     = "";  // 출력 데이터셋 없음
    var strArg      = "employeeId=" + nexacro.wrapQuote(employeeId);  // 전달할 파라미터
    var callBackFnc = "fnCallbackDelete";  // 콜백 함수
    var isAsync     = true;  // 비동기 처리

    // 트랜잭션 호출 로그
    console.log("삭제 트랜잭션 시작. 서비스 ID: " + strSvcId + ", URL: " + strSvcUrl);
    console.log("삭제 대상 직원 ID: " + employeeId);

    // 트랜잭션 호출
    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};

// 삭제 콜백 함수
this.fnCallbackDelete = function(strSvcId, nErrorCode, strErrorMsg) {
    if (nErrorCode < 0) {
        this.alert("직원 삭제에 실패하였습니다: " + strErrorMsg);
    } else {
        this.alert("직원 삭제가 완료되었습니다.");
        // 삭제 후 목록 새로고침
        this.fnSearch();
    }
};


]]></Script>
    <Bind>
      <BindItem id="bind_SearchWord" compid="edt_SearchWord" propid="value" datasetid="ds_search" columnid="SEARCH_WORD"/>
      <BindItem id="bind_SearchType" compid="cmb_SearchType" propid="value" datasetid="ds_search" columnid="SEARCH_TYPE"/>
    </Bind>
  </Form>
</FDL>
