<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Form_Code" width="1280" height="720" titletext="Employee Management" onload="Form_Code_onload">
    <Objects>
      <!-- 직원 목록 관리용 데이터셋 -->
      <Dataset id="ds_empList">
        <ColumnInfo>
          <Column id="empID" type="STRING" size="256"/>
          <Column id="empName" type="STRING" size="256"/>
          <Column id="empDept" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <!-- 선택된 직원 정보 관리용 데이터셋 -->
      <Dataset id="ds_empDetail">
        <ColumnInfo>
          <Column id="empID" type="STRING" size="256"/>
          <Column id="empName" type="STRING" size="256"/>
          <Column id="empDept" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <!-- 검색을 위한 데이터셋 -->
      <Dataset id="ds_empSearch">
        <ColumnInfo>
          <Column id="SEARCH_TYPE" type="STRING" size="256"/>
          <Column id="SEARCH_WORD" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <!-- 콤보박스 데이터셋 (검색 타입) -->
      <Dataset id="ds_empSearchType">
        <ColumnInfo>
          <Column id="code" type="STRING" size="256"/>
          <Column id="name" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row>
            <Col id="code">empName</Col>
            <Col id="name">직원명 검색</Col>
          </Row>
          <Row>
            <Col id="code">empDept</Col>
            <Col id="name">부서명 검색</Col>
          </Row>
          <Row>
            <Col id="code">empID</Col>
            <Col id="name">직원 코드 검색</Col>
          </Row>
          <Row>
            <Col id="code">deptID</Col>
            <Col id="name">부서 코드 검색</Col>
          </Row>
        </Rows>
      </Dataset>
      <Dataset id="Dataset00"/>
      <Dataset id="Dataset01"/>
      <Dataset id="Dataset02"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[// 폼이 로드되었을 때 초기화 작업을 수행
this.Form_Code_onload = function(obj:nexacro.Form, e:nexacro.LoadEventInfo) {
    this.fnInit();
};

// 데이터셋 및 UI 초기화
this.fnInit = function() {
    this.edt_Code.set_readonly(true);
    this.edt_CodeNm.set_readonly(true);
    this.edt_EmpDept.set_readonly(true);
    this.emp_Save.set_enable(false);
    this.emp_Delete.set_enable(false);

    trace("폼 로드 완료 및 데이터셋 초기화");
    trace("ds_empSearch 데이터셋: " + this.ds_empSearch.saveXML());
    trace("ds_empDetail 데이터셋: " + this.ds_empDetail.saveXML());
};

// 직원 정보 조회 함수 (조회 버튼 클릭 시 호출)
this.emp_Search_onclick = function(obj:nexacro.Button, e:nexacro.MouseEventInfo) {
    var searchValue = this.edt_Search.value;
    var searchType = this.cmb_SearchType.value;

    if (searchValue === "") {
        alert("검색어를 입력해주세요.");
        return;
    }

    this.ds_empSearch.setColumn(0, "SEARCH_TYPE", searchType);
    this.ds_empSearch.setColumn(0, "SEARCH_WORD", searchValue);

    var svcID = "selectEmployee";
    var strSvcUrl = "svc::selectEmployee.do";
    var inData = "ds_empSearch=ds_empSearch";
    var outData = "ds_empList=ds_empList";
    var argument = "searchType=" + searchType + " searchValue=" + searchValue;
    var callback = "fnCallback";
    var isAsync = true;

    this.transaction(svcID, strSvcUrl, inData, outData, argument, callback);
};

// 직원 정보 저장 함수 (저장 버튼 클릭 시 호출)
this.emp_Save_onclick = function(obj:nexacro.Button, e:nexacro.MouseEventInfo) {
    var empID = this.edt_Code.value;
    var empName = this.edt_CodeNm.value;
    var empDept = this.edt_EmpDept.value;

    if (!empID || !empName || !empDept) {
        alert("모든 필드를 입력해주세요.");
        return;
    }

    var svcID = "saveEmployee";
    var strSvcUrl = "svc::saveEmployee.do";
    var inData = "ds_empDetail=ds_empDetail";
    var outData = "";
    var argument = "";
    var callback = "fnCallback";
    var isAsync = true;

    this.transaction(svcID, strSvcUrl, inData, outData, argument, callback);
};

// 직원 정보 삭제 함수 (삭제 버튼 클릭 시 호출)
this.emp_Delete_onclick = function(obj:nexacro.Button, e:nexacro.MouseEventInfo) {
    var selectedRow = this.ds_empDetail.rowposition;

    if (selectedRow < 0) {
        alert("삭제할 직원을 선택해주세요.");
        return;
    }

    var empID = this.ds_empDetail.getColumn(selectedRow, "empID");

    if (confirm("정말로 이 직원 정보를 삭제하시겠습니까?")) {
        this.ds_empDetail.deleteRow(selectedRow);

        var svcID = "deleteEmployee";
        var strSvcUrl = "svc::deleteEmployee.do";
        var inData = "";
        var outData = "";
        var argument = "empID=" + empID;
        var callback = "fnCallback";

        this.transaction(svcID, strSvcUrl, inData, outData, argument, callback);
    }
};

// 트랜잭션이 완료된 후 실행되는 콜백 함수
this.fnCallback = function(svcID, errorCode, errorMsg) {
    if (errorCode < 0) {
        alert("Error: " + errorMsg);
    } else {
        alert("서버에서 직원 정보가 성공적으로 처리되었습니다.");
        this.ds_empList.clearData();
        this.ds_empList.loadXML(outData);
    }
};

// 직원 더블 클릭 시 정보 조회 및 수정
this.emp_search_ondblclick = function(obj:nexacro.Grid, e:nexacro.MouseEventInfo) {
    var searchValue = this.edt_Search.value;

    if (searchValue === "") {
        alert("검색어를 입력해주세요.");
        return;
    }

    var findRow = this.ds_empDetail.findRow("empName", searchValue);
    if (findRow < 0) {
        alert("일치하는 직원 정보가 없습니다.");
    } else {
        this.ds_empDetail.set_rowposition(findRow);
        alert("일치하는 직원 정보가 선택되었습니다.");

        this.edt_Code.set_value(this.ds_empDetail.getColumn(findRow, "empID"));
        this.edt_CodeNm.set_value(this.ds_empDetail.getColumn(findRow, "empName"));
        this.edt_EmpDept.set_value(this.ds_empDetail.getColumn(findRow, "empDept"));

        this.edt_Code.set_readonly(false);
        this.edt_CodeNm.set_readonly(false);
        this.edt_EmpDept.set_readonly(false);
        this.emp_Save.set_enable(true);
        this.emp_Delete.set_enable(true);
    }
};

// 수정 버튼 클릭 시 데이터 수정 처리
this.emp_Modify_onclick = function(obj:nexacro.Button, e:nexacro.MouseEventInfo) {
    alert("수정 버튼이 클릭되었습니다.");
    // 추가 수정 기능 구현 필요
};

// 직원 수정 더블 클릭 처리
this.emp_correction_ondblclick = function(obj:nexacro.Button, e:nexacro.MouseEventInfo) {
    alert("수정(보조) 버튼이 더블 클릭되었습니다.");
    // 추가 수정 기능 구현 필요
};
]]></Script>
    <Layouts>
      <Layout height="720" width="1280">
        <!-- 콤보박스 추가 (검색 타입 선택) -->
        <Combo id="cmb_SearchType" left="15" top="85" width="150" height="30" innerdataset="ds_empSearchType" codecolumn="code" datacolumn="name" value="empName"/>
        <!-- 검색어 입력 필드 추가 -->
        <Static id="stc_SearchWordLabel" text="검색어" left="245" top="85" width="50" height="30"/>
        <Edit id="edt_Search" left="305" top="85" width="150" height="30"/>
        <!-- 조회 버튼 -->
        <Button id="emp_Search" text="조회" left="460" top="85" width="50" height="30" onclick="emp_Search_onclick"/>
        <!-- 직원 목록 그리드 -->
        <Grid id="grd_CodeMst" left="15" top="120" width="645" height="330" binddataset="ds_empList">
          <Formats>
            <Format id="default">
              <Columns>
                <Column size="100"/>
                <Column size="150"/>
                <Column size="100"/>
              </Columns>
              <Rows>
                <Row size="24" band="head"/>
                <Row size="24"/>
              </Rows>
              <Band id="head">
                <Cell col="0" text="직원 ID"/>
                <Cell col="1" text="직원명"/>
                <Cell col="2" text="부서명"/>
              </Band>
              <Band id="body">
                <Cell col="0" text="bind:empID"/>
                <Cell col="1" text="bind:empName"/>
                <Cell col="2" text="bind:empDept"/>
              </Band>
            </Format>
          </Formats>
        </Grid>
        <!-- 직원 정보 입력 및 수정 -->
        <Static id="stc_Code" text="직원명" left="10" top="470" width="40" height="30"/>
        <Edit id="edt_Code" left="55" top="470" width="110" height="30" value="bind:empName" onchanged="edt_Code_onchanged"/>
        <Static id="stc_EmpDept" text="부서명" left="190" top="470" width="68" height="30"/>
        <Edit id="edt_EmpDept" left="235" top="470" width="140" height="30" value="bind:empDept"/>
        <!-- 저장, 삭제 버튼 -->
        <Button id="emp_Save" text="저장" left="375" top="470" width="50" height="30" onclick="emp_Save_onclick"/>
        <Button id="emp_Delete" text="삭제" left="425" top="470" width="50" height="30" onclick="emp_Delete_onclick"/>
      </Layout>
    </Layouts>
  </Form>
</FDL>
