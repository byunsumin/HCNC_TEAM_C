<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="Popup_FindLoginInfo" width="600" height="500" titletext="아이디 및 비밀번호 찾기">
    <Layouts>
      <Layout height="500" mobileorientation="landscape" width="600">
        <Static id="sta_FindId" taborder="0" text="아이디 찾기" left="20" top="20" width="170" height="40" font="24px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;"/>
        <Static id="sta_FindPassword" taborder="1" text="새로운 비밀번호 발급" left="20" top="200" width="230" height="40" font="24px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;"/>
        <Static id="sta_NameForId" taborder="2" text="이름 : " left="20" top="80" width="50" height="40" font="18px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;"/>
        <Static id="sta_EmailForId" taborder="3" text="이메일 : " left="260" top="80" width="70" height="40" font="18px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;"/>
        <Static id="sta_IdForPassword" taborder="4" text="ID : " left="30" top="260" width="40" height="40" font="18px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;"/>
        <Static id="sta_EmailForPassword" taborder="5" text="이메일 : " left="255" top="260" width="70" height="40" font="18px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;"/>
        <Edit id="edt_NameForId" taborder="6" left="70" top="80" width="160" height="40"/>
        <Edit id="edt_EmailForId" taborder="7" left="330" top="80" width="170" height="40"/>
        <Edit id="edt_IdForPassword" taborder="8" left="70" top="260" width="160" height="40"/>
        <Edit id="edt_EmailForPassword" taborder="9" left="330" top="260" width="170" height="40"/>
        <Button id="btn_IdSearch" taborder="10" text="찾기" left="520" top="80" width="50" height="40" onclick="btn_IdSearch_onclick"/>
        <Button id="btn_PasswordSearch" taborder="11" text="찾기" left="520" top="260" width="50" height="40" onclick="btn_PasswordSearch_onclick"/>
        <Static id="sta_ResultId" taborder="12" left="20" top="140" width="550" height="40" font="bold 14pt &quot;Arial Black&quot;"/>
        <Static id="sta_NewPassword" taborder="13" text="새로운 비밀번호 입력 : " left="30" top="340" width="190" height="40" font="18px/normal &quot;Arial&quot;,&quot;Malgun Gothic&quot;,&quot;Gulim&quot;" visible="false"/>
        <Edit id="edt_NewPassword" taborder="14" left="220" top="340" width="170" height="40" visible="false"/>
        <Button id="btn_NewPassword" taborder="15" text="확인" left="410" top="340" width="50" height="40" visible="false" onclick="btn_NewPassword_onclick"/>
        <Button id="btn_Close" taborder="16" text="닫기" left="260" top="440" width="80" height="40" onclick="btn_Close_onclick"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
// Id 찾기 버튼
this.btn_IdSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 유효성 검사
	if(this.ds_FindLoginInfo.getColumn(0, "name") == '') {
		alert("이름을 입력하세요.");
		return;
	}
	if(this.ds_FindLoginInfo.getColumn(0, "emailForId") == '') {
		alert("이메일을 입력하세요.");
		return;
	}
	
	var strSvcId    = "FindId";
    var strSvcUrl   = "svc::FindId.do";
    var inData      = "ds_FindLoginInfo=ds_FindLoginInfo";  // 입력 데이터셋
    var outData     = "ds_Result=ds_Result"; // 출력 데이터셋 (서버에서 응답받을 데이터)
    var strArg      = "";  // 추가적인 파라미터 (필요시 사용)
    var callBackFnc = "fnCallback";  // 콜백 함수 이름
    var isAsync     = true;  // 비동기 설정

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
	
};

// Password 찾기 버튼
this.btn_PasswordSearch_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// 유효성 검사
	if(this.ds_FindLoginInfo.getColumn(0, "id") == '') {
		alert("아이디를 입력하세요.");
		return;
	}
	if(this.ds_FindLoginInfo.getColumn(0, "emailForPassword") == '') {
		alert("이메일을 입력하세요.");
		return;
	}
	
	var strSvcId    = "FindPassword";
    var strSvcUrl   = "svc::FindPassword.do";
    var inData      = "ds_FindLoginInfo=ds_FindLoginInfo";  // 입력 데이터셋
    var outData     = "";  // 출력 데이터셋 (서버에서 응답받을 데이터)
    var strArg      = "";  // 추가적인 파라미터 (필요시 사용)
    var callBackFnc = "fnCallback";  // 콜백 함수 이름
    var isAsync     = true;  // 비동기 설정

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
};

// 닫기 버튼
this.btn_Close_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	this.close("Close FindLoginInfo");
};

// 콜백 함수
this.fnCallback = function(svcID, errorCode, errorMsg) {

	// 아이디 찾기 콜백
	if(svcID == "FindId"){
		if (errorCode < 0) {
			alert(errorMsg);
			return;
		}
		
		var id = this.ds_Result.getColumn(0, "id");
		
		// Id 마스킹
		var maskedId = this.maskedId(id);
		
		var name = this.ds_FindLoginInfo.getColumn(0, "name");
		var ResultId = name + "님의 아이디는 " + maskedId + "입니다.";
		
		this.ds_Result.setColumn(0, "maskedId", maskedId);
		this.ds_Result.setColumn(0, "ResultId", ResultId);
		
	}
	
	// 비밀번호 찾기 콜백
	if(svcID == "FindPassword"){
		if (errorCode < 0) {
			alert(errorMsg);
			return;
		}
		
		alert("새로 등록할 비밀번호를 입력하세요.");
		
		// 숨겨진 새 비밀번호 입력 칸 보이기
		this.sta_NewPassword.set_visible(true);
		this.edt_NewPassword.set_visible(true);
		this.btn_NewPassword.set_visible(true);
	}
	
	// 비밀번호 업데이트 콜백
	if(svcID == "UpdatePassword"){
		if (errorCode < 0) {
			alert(errorMsg);
			return;
		}
		
		alert("비밀번호 등록이 완료되었습니다.");
		
		this.close("FindLoginInfo Close");
	}
	
}

// id 마스킹
this.maskedId = function(id) {
    
        var markedId = "";
        
        // 아이디 길이가 1 이상이면 마스킹 처리 시작
        if (id.length > 1) {
            // 두번째 글자까지 그대로
            markedId += id.substring(0, 2);
            
            // 중간 부분 마스킹
            for (var i = 2; i < id.length - 1; i++) {
                markedId += '*';
            }
            
            // 마지막 글자 추가
            markedId += id.substring(id.length - 1);
        } else {
            // 길이가 1인 경우는 그냥 그대로 사용
            markedId = id;
        }
        
        // 전체 마스킹된 Id 반환
        return markedId;
};

// 새 비밀번호 업데이트 확인 버튼
this.btn_NewPassword_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	var password = this.ds_NewPassword.getColumn(0, "NewPassword");

	// 비밀번호 유효성 검사
    if (password && password.trim() !== "") {
        var passwordPattern = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d]{8,}$/;
        if (!passwordPattern.test(password)) {
            alert("비밀번호는 최소 8자 이상이며, 숫자와 영문자를 포함해야 합니다.");
            return false;
       }
    }
	
	this.ds_NewPassword.setColumn(0, "id", this.ds_FindLoginInfo.getColumn(0, "id"));
	
	var strSvcId    = "UpdatePassword";
    var strSvcUrl   = "svc::UpdatePassword.do";
    var inData      = "ds_NewPassword=ds_NewPassword";  // 입력 데이터셋
    var outData     = "";  // 출력 데이터셋 (서버에서 응답받을 데이터)
    var strArg      = "";  // 추가적인 파라미터 (필요시 사용)
    var callBackFnc = "fnCallback";  // 콜백 함수 이름
    var isAsync     = true;  // 비동기 설정

    this.transaction(strSvcId, strSvcUrl, inData, outData, strArg, callBackFnc, isAsync);
	
};
]]></Script>
    <Objects>
      <Dataset id="ds_FindLoginInfo">
        <ColumnInfo>
          <Column id="name" type="STRING" size="256"/>
          <Column id="id" type="STRING" size="256"/>
          <Column id="emailForId" type="STRING" size="256"/>
          <Column id="emailForPassword" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
      <Dataset id="ds_Result" useclientlayout="true">
        <ColumnInfo>
          <Column id="ResultId" type="STRING" size="256"/>
          <Column id="ResultPassword" type="STRING" size="256"/>
          <Column id="id" type="STRING" size="256"/>
          <Column id="maskedId" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_NewPassword">
        <ColumnInfo>
          <Column id="NewPassword" type="STRING" size="256"/>
          <Column id="id" type="STRING" size="256"/>
        </ColumnInfo>
        <Rows>
          <Row/>
        </Rows>
      </Dataset>
    </Objects>
    <Bind>
      <BindItem id="item0" compid="edt_NameForId" propid="value" datasetid="ds_FindLoginInfo" columnid="name"/>
      <BindItem id="item1" compid="edt_IdForPassword" propid="value" datasetid="ds_FindLoginInfo" columnid="id"/>
      <BindItem id="item2" compid="edt_EmailForId" propid="value" datasetid="ds_FindLoginInfo" columnid="emailForId"/>
      <BindItem id="item3" compid="edt_EmailForPassword" propid="value" datasetid="ds_FindLoginInfo" columnid="emailForPassword"/>
      <BindItem id="item4" compid="sta_ResultId" propid="text" datasetid="ds_Result" columnid="ResultId"/>
      <BindItem id="item5" compid="edt_NewPassword" propid="value" datasetid="ds_NewPassword" columnid="NewPassword"/>
    </Bind>
  </Form>
</FDL>
