<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="hcnc.cteam.employee.EMMapper">
    
    <!-- 조건에 따른 직원 목록 조회 -->
    <select id="selectEmployeeList" parameterType="map" resultType="hcnc.cteam.employee.EMDTO">
       SELECT 
    a.emp_code AS empCode,
    b.dep_name AS depName,
    c.assign_name AS assignName,
    a.id,
    a.name,
    a.birth,
    a.gender,
    a.phone,
    a.address,
    a.email,
    a.account
FROM employee a
LEFT JOIN department b ON a.dep_code = b.dep_code
LEFT JOIN assignment c ON a.assign_code = c.assign_code
WHERE 1=1
<if test="SEARCH_TYPE != null and SEARCH_WORD != null">
    <if test="SEARCH_TYPE == 'NAME'">
        AND a.name LIKE CONCAT('%', #{SEARCH_WORD}, '%')
    </if>
    <if test="SEARCH_TYPE == 'DEP'">
        AND b.dep_name LIKE CONCAT('%', #{SEARCH_WORD}, '%')
    </if> 
    <if test="SEARCH_TYPE == 'ASSIGN'">
        AND c.assign_name LIKE CONCAT('%', #{SEARCH_WORD}, '%')
    </if>
    
    <if test="SEARCH_TYPE == 'ALL'">
        AND (
            a.name LIKE CONCAT('%', #{SEARCH_WORD}, '%') OR 
            b.dep_name LIKE CONCAT('%', #{SEARCH_WORD}, '%') OR
            c.assign_name LIKE CONCAT('%', #{SEARCH_WORD}, '%')
        )
    </if>
</if>
</select>

    <!-- 직원 등록 -->
    <insert id="selectEmployeeData" parameterType="map">
       INSERT INTO employee (
    id,
    name,
    password,
    birth,
    gender,
    phone,
    address,
    email,
    join_date,
    account,
    reg_date,
    reg_name
)
VALUES (
    #{id},
    #{name},
    SHA2(#{password}, 256),
    #{birth},
    #{gender},
    #{phone},
    #{address},
    #{email},
    #{joinDate},
    #{account},
    CURTIME(),
    '김명준'
);    
    </insert>
 <update id="updateEmployeeData" parameterType="map">
UPDATE employee
SET 
    id = #{id},
    password = SHA2(#{password}, 256),
    name = #{name},
    birth = SUBSTRING(#{birth}, 1, 8),
    gender = #{gender},
    phone = #{phone},
    address = #{address},
    email = #{email},
    account = #{account}
    WHERE emp_code = #{emp_code};
    </update>
    
    <delete id="deleteEmployee" parameterType="map">
        DELETE FROM employee
        WHERE emp_code = #{empCode};  <!-- 사번(emp_code)을 기준으로 직원 정보 삭제 -->
    </delete>
</mapper>
